static void	ft_initex(t_mlx_data *pdata)
{
	pdata->txt.utils.lineHeight = (int)(HEIGHT / pdata->dda.perpWallDist);
	if (pdata->txt.utils.lineHeight <= 0)
		pdata->txt.utils.lineHeight = 1;
	pdata->txt.utils.drawStart = -pdata->txt.utils.lineHeight / 2 + HEIGHT / 2;
	if (pdata->txt.utils.drawStart < 0)
		pdata->txt.utils.drawStart = 0;
	pdata->txt.utils.drawEnd = pdata->txt.utils.lineHeight / 2 + HEIGHT / 2;
	if (pdata->txt.utils.drawEnd >= HEIGHT)
		pdata->txt.utils.drawEnd = HEIGHT - 1;
	if (!pdata->dda.side)
		pdata->txt.utils.wallX = pdata->posY + pdata->dda.perpWallDist * pdata->dda.rayDirY;
	else
		pdata->txt.utils.wallX = pdata->posX + pdata->dda.perpWallDist * pdata->dda.rayDirX;
	pdata->txt.utils.wallX -= floor(pdata->txt.utils.wallX);
	pdata->txt.utils.tex_x = (int)(pdata->txt.utils.wallX * (double)pdata->txt.width);
	if (!pdata->dda.side && pdata->dda.rayDirX > 0)
		pdata->txt.utils.tex_x = pdata->txt.width - pdata->txt.utils.tex_x - 1;
	if (pdata->dda.side && pdata->dda.rayDirY < 0)
		pdata->txt.utils.tex_x = pdata->txt.width - pdata->txt.utils.tex_x - 1;
	if (pdata->txt.utils.tex_x < 0)
		pdata->txt.utils.tex_x = 0;
	if (pdata->txt.utils.tex_x >= pdata->txt.width)
		pdata->txt.utils.tex_x = pdata->txt.width - 1;
	pdata->txt.utils.step = (double)pdata->txt.height / pdata->txt.utils.lineHeight;
	pdata->txt.utils.texPos = (pdata->txt.utils.drawStart - HEIGHT / 2 + pdata->txt.utils.lineHeight / 2) * pdata->txt.utils.step;
}

void ft_texture(t_mlx_data *pdata, int x)
{
	int	y;
	double	shade;
	int	color;
	
	ft_initex(pdata);
	y = pdata->txt.utils.drawStart - 1;
	while (++y <= pdata->txt.utils.drawEnd)
	{
		pdata->txt.utils.texPos += pdata->txt.utils.step;
		pdata->txt.utils.tex_y = (int)pdata->txt.utils.texPos;
		if (pdata->txt.utils.tex_y < 0)
			pdata->txt.utils.tex_y = 0;
		if (pdata->txt.utils.tex_y >= pdata->txt.height)
			pdata->txt.utils.tex_y = pdata->txt.height - 1;
		color = ft_pixget(pdata->txt, pdata->txt.utils.tex_x, pdata->txt.utils.tex_y);
		if (pdata->dda.side)
			shade = 0.5;
		else
			shade = 1;
		ft_pixput(pdata, x, y, ft_rgb(color, shade));
	}
}